services:
  # Core application services - available in all profiles
  mariadb:
    image: mariadb:10.5
    container_name: mariadb
    profiles: ["core", "gvm", "darkstar"]
    env_file:
      - .env
    environment:
      MARIADB_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MARIADB_DATABASE: ${DB_NAME}
      MARIADB_USER: ${DB_USER}
      MARIADB_PASSWORD: ${DB_PASSWORD}
    volumes:
      - ./sql/init.sql:/docker-entrypoint-initdb.d/init.sql
      - mariadb_data:/var/lib/mysql
    ports:
      - "3307:3306"
    networks:
      - vuln_net
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Core OpenVAS infrastructure - essential for GVM operations
  redis-server:
    image: registry.community.greenbone.net/community/redis-server
    profiles: ["core", "gvm", "darkstar"]
    restart: on-failure
    volumes:
      - redis_socket_vol:/run/redis/
    networks:
      - vuln_net

  pg-gvm:
    image: registry.community.greenbone.net/community/pg-gvm:stable
    profiles: ["gvm", "darkstar"]
    restart: on-failure
    volumes:
      - psql_data_vol:/var/lib/postgresql
      - psql_socket_vol:/var/run/postgresql
    networks:
      - vuln_net

  # OpenVAS data containers (these will initialize and exit)
  vulnerability-tests:
    image: registry.community.greenbone.net/community/vulnerability-tests
    profiles: ["gvm", "darkstar"]
    environment:
      FEED_RELEASE: "24.10"
    volumes:
      - vt_data_vol:/mnt
    networks:
      - vuln_net

  notus-data:
    image: registry.community.greenbone.net/community/notus-data
    profiles: ["gvm", "darkstar"]
    volumes:
      - notus_data_vol:/mnt
    networks:
      - vuln_net

  scap-data:
    image: registry.community.greenbone.net/community/scap-data
    profiles: ["gvm", "darkstar"]
    volumes:
      - scap_data_vol:/mnt
    networks:
      - vuln_net

  cert-bund-data:
    image: registry.community.greenbone.net/community/cert-bund-data
    profiles: ["gvm", "darkstar"]
    volumes:
      - cert_data_vol:/mnt
    networks:
      - vuln_net

  dfn-cert-data:
    image: registry.community.greenbone.net/community/dfn-cert-data
    profiles: ["gvm", "darkstar"]
    volumes:
      - cert_data_vol:/mnt
    depends_on:
      - cert-bund-data
    networks:
      - vuln_net

  data-objects:
    image: registry.community.greenbone.net/community/data-objects
    profiles: ["gvm", "darkstar"]
    environment:
      FEED_RELEASE: "24.10"
    volumes:
      - data_objects_vol:/mnt
    networks:
      - vuln_net

  report-formats:
    image: registry.community.greenbone.net/community/report-formats
    profiles: ["gvm", "darkstar"]
    environment:
      FEED_RELEASE: "24.10"
    volumes:
      - data_objects_vol:/mnt
    depends_on:
      - data-objects
    networks:
      - vuln_net

  gpg-data:
    image: registry.community.greenbone.net/community/gpg-data
    profiles: ["gvm", "darkstar"]
    volumes:
      - gpg_data_vol:/mnt
    networks:
      - vuln_net

  # Core GVM services
  gvmd:
    image: registry.community.greenbone.net/community/gvmd:stable
    profiles: ["gvm", "darkstar"]
    restart: on-failure
    volumes:
      - gvmd_data_vol:/var/lib/gvm
      - scap_data_vol:/var/lib/gvm/scap-data/
      - cert_data_vol:/var/lib/gvm/cert-data
      - data_objects_vol:/var/lib/gvm/data-objects/gvmd
      - vt_data_vol:/var/lib/openvas/plugins
      - psql_data_vol:/var/lib/postgresql
      - gvmd_socket_vol:/run/gvmd
      - ospd_openvas_socket_vol:/run/ospd
      - psql_socket_vol:/var/run/postgresql
    depends_on:
      pg-gvm:
        condition: service_started
      scap-data:
        condition: service_completed_successfully
      cert-bund-data:
        condition: service_completed_successfully
      dfn-cert-data:
        condition: service_completed_successfully
      data-objects:
        condition: service_completed_successfully
      report-formats:
        condition: service_completed_successfully
    healthcheck:
      test: ["CMD", "id"]
      interval: 1m30s
      timeout: 30s
      retries: 5
      start_period: 30s
    networks:
      - vuln_net

  # OpenVAS scanner configuration
  configure-openvas:
    image: registry.community.greenbone.net/community/openvas-scanner:stable
    profiles: ["darkstar"]
    volumes:
      - openvas_data_vol:/mnt
      - openvas_log_data_vol:/var/log/openvas
    command:
      - /bin/sh
      - -c
      - |
        printf "table_driven_lsc = yes\nopenvasd_server = http://openvasd:80\n" > /mnt/openvas.conf
        sed "s/127/128/" /etc/openvas/openvas_log.conf | sed 's/gvm/openvas/' > /mnt/openvas_log.conf
        chmod 644 /mnt/openvas.conf
        chmod 644 /mnt/openvas_log.conf
        touch /var/log/openvas/openvas.log
        chmod 666 /var/log/openvas/openvas.log
    networks:
      - vuln_net

  # OpenVAS scanner daemon
  openvasd:
    image: registry.community.greenbone.net/community/openvas-scanner:stable
    profiles: ["darkstar"]
    restart: on-failure
    environment:
      OPENVASD_MODE: service_notus
      GNUPGHOME: /etc/openvas/gnupg
      LISTENING: 0.0.0.0:80
    volumes:
      - openvas_data_vol:/etc/openvas
      - openvas_log_data_vol:/var/log/openvas
      - gpg_data_vol:/etc/openvas/gnupg
      - notus_data_vol:/var/lib/notus
    depends_on:
      vulnerability-tests:
        condition: service_completed_successfully
      configure-openvas:
        condition: service_completed_successfully
      gpg-data:
        condition: service_completed_successfully
    networks:
      vuln_net:
        aliases:
          - openvasd

  # OpenVAS Scanner Protocol Daemon
  ospd-openvas:
    image: registry.community.greenbone.net/community/ospd-openvas:stable
    profiles: ["darkstar"]
    restart: on-failure
    hostname: ospd-openvas.local
    cap_add:
      - NET_ADMIN
      - NET_RAW
    security_opt:
      - seccomp=unconfined
      - apparmor=unconfined
    command:
      [
        "ospd-openvas",
        "-f",
        "--config",
        "/etc/gvm/ospd-openvas.conf",
        "--notus-feed-dir",
        "/var/lib/notus/advisories",
        "-m",
        "666",
      ]
    volumes:
      - gpg_data_vol:/etc/openvas/gnupg
      - vt_data_vol:/var/lib/openvas/plugins
      - notus_data_vol:/var/lib/notus
      - ospd_openvas_socket_vol:/run/ospd
      - redis_socket_vol:/run/redis/
      - openvas_data_vol:/etc/openvas/
      - openvas_log_data_vol:/var/log/openvas
    depends_on:
      redis-server:
        condition: service_started
      gpg-data:
        condition: service_completed_successfully
      vulnerability-tests:
        condition: service_completed_successfully
      configure-openvas:
        condition: service_completed_successfully
    networks:
      - vuln_net

  # OpenVAS Web Interface
  gsa:
    image: registry.community.greenbone.net/community/gsa:stable
    profiles: ["gvm", "darkstar"]
    restart: on-failure
    ports:
      - "9392:80"
    volumes:
      - gvmd_socket_vol:/run/gvmd
    depends_on:
      - gvmd
    networks:
      - vuln_net

  # GVM Tools for command line access
  gvm-tools:
    image: registry.community.greenbone.net/community/gvm-tools
    profiles: ["darkstar"]
    volumes:
      - gvmd_socket_vol:/run/gvmd
      - ospd_openvas_socket_vol:/run/ospd
    depends_on:
      - gvmd
      - ospd-openvas
    networks:
      - vuln_net

  # Custom OpenVAS API
  openvas-api:
    build:
      context: ./openvas_api
      dockerfile: Dockerfile
    container_name: openvas-api
    profiles: ["gvm", "darkstar"]
    ports:
      - "8008:8008"
    volumes:
      - gvmd_socket_vol:/run/gvmd 
      - ./openvas_api:/app
    depends_on:
      gvmd:
        condition: service_healthy
    networks:
      - vuln_net

  # Main Darkstar application
  darkstar:
    build:
      context: .
      dockerfile: docker/Dockerfile
    container_name: darkstar
    profiles: ["core", "gvm", "darkstar"]
    working_dir: /app
    env_file:
      - .env
    ports:
      - "8000:8000"
    depends_on:
      mariadb:
        condition: service_healthy
    networks:
      - vuln_net
    volumes:
      - ./darkstar:/app/darkstar
      - ./data:/app/data
    restart: unless-stopped
    tty: true
    stdin_open: true
    command: tail -f /dev/null

volumes:
  mariadb_data:
  gpg_data_vol:
  scap_data_vol:
  cert_data_vol:
  data_objects_vol:
  gvmd_data_vol:
  psql_data_vol:
  vt_data_vol:
  notus_data_vol:
  psql_socket_vol:
  gvmd_socket_vol:
  ospd_openvas_socket_vol:
  redis_socket_vol:
  openvas_data_vol:
  openvas_log_data_vol:

networks:
  vuln_net:
    driver: bridge
